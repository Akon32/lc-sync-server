#!/bin/bash

# не вынести ли это в /etc/default/syncserver ?
ERL_PATH=usr/share/syncserver/ebin
CONFIG_FILE=etc/syncserver/syncserver.config
COOKIE_FILE=etc/syncserver/cookie
SNAME="syncserver@`uname -n`"
CONTROL_SNAME="syncserverctl"
DATABASE_DIR=var/syncserver/database
SYNCSERVER_USER=syncserver

WORK_DIR=/

print_help(){
	echo "Synchronization Server control script"
	echo "Usage:"
	echo " $0 start|stop|status|restart|force-reload|"
	echo -n "    |create-db|create-cookie|create-cookie-force "
	echo " [--workdir DIR] [--no-su]"
}

if [ $# -eq 0 ] ; then
	print_help
	exit
fi

ARG1=$1

shift

while [ $# -gt 0 ]; do
	case $1 in 
		--no-su)
			#echo "not using \"su\""
			NO_SU=true
		;;
		--workdir)
			shift
			if [ -d "$1" ]; then
				WORK_DIR="$1"
				#echo "cd to directory \"$1\""
			else 
				echo "Wrong directory in option --workdir (\"$1\")"
			fi
		;;
		*)
			echo "Wrong argument: $1"
	esac
	shift
done

cd "$WORK_DIR"

START_SCRIPT="
	Result=rpc:call('$SNAME',util,start,[]),
	if	Result -> init:stop(0);
		true -> init:stop(1)
	end."

STOP_SCRIPT="
	rpc:call('$SNAME',util,stop,[]),
	init:stop(0)."

STATUS_SCRIPT="
	Result=rpc:call('$SNAME',util,status,[]),
	if	Result -> init:stop(0);
		true -> init:stop(1)
	end."

CREATE_DB_SCRIPT="
	R=rpc:call('$SNAME',util,create_db,[]),
	init:stop(case R of 
		ok -> 0;
		already_exists -> 2;
		_-> 1
	end)."

as_syncserver(){
	if [ -z "$NO_SU" ]; then
		su $SYNCSERVER_USER -- -c "$*"
	else
		bash -c "$*"
	fi
}

COOKIE=$(as_syncserver "cat $COOKIE_FILE 2>/dev/null" )

COOKIE_OPT="-setcookie $COOKIE"
test -z $COOKIE && COOKIE_OPT=

ERL_OPTIONS="-detached -pa $ERL_PATH -sname $SNAME -config $CONFIG_FILE $COOKIE_OPT"
ERL_OPTIONS_CONTROL="-noshell -sname $CONTROL_SNAME $COOKIE_OPT"
#ERL_OPTIONS_CREATEDB="-noshell -pa $ERL_PATH -sname $CONTROL_SNAME -config $CONFIG_FILE $COOKIE_OPT"

#запуск рабочего узла
startnode(){
	as_syncserver "erl $ERL_OPTIONS"
}

# запуск контролирующего узла
# $* - выполняемый сценарий
ctl(){
	erl $ERL_OPTIONS_CONTROL -eval "$*"
}

#по сути stop_server делает то же..
stopnode(){
	ctl "rpc:call('$SNAME',init,stop,[]),init:stop()."
}

print_ok_fail(){
	if [ "$1" -eq 0 ];then
		echo " OK"
	else
		echo " FAIL"
	fi
	return $1
}


status(){
	echo -n "Checking SyncServer status.."
	ctl "$STATUS_SCRIPT" >/dev/null
	R=$?
	if [ "$R" -eq 0 ];then
		echo " OK"
	else
		echo " not running"
	fi
	return $R
}

stop_server(){
	echo -n "Stopping SyncServer.."	
	if status >/dev/null; then 
		ctl "$STOP_SCRIPT" >/dev/null
		print_ok_fail "$?"
	else 
		echo " not running."
	fi
}

start_server(){
	echo -n "Starting SyncServer.."	
	if status >/dev/null; then 
		echo " already started."
	else 
		{ startnode && ctl "$START_SCRIPT" ; }>/dev/null
		print_ok_fail "$?"
	fi
}

restart(){
	stop_server
	start_server
}

create_db(){
	echo -n "Creating database.."	
	if status>/dev/null; then
		echo " FAIL: Syncserver is running"
		return 1
	fi
	if startnode ;then
		ctl "$CREATE_DB_SCRIPT" >/dev/null
		R=$?
		stopnode
		case $R in
			0)	echo " OK";
				return 0 ;;
			2)	echo " already exists" ;
				return 0 ;;
			*)	echo " FAIL" ;
				return 1 ;;
		esac
	else
		echo " FAIL" ; return 3
	fi
}

create_cookie(){
	cat /dev/urandom|head -c32|md5sum|head -c32 > $COOKIE_FILE
	R=$?
	if [ $R -eq 0 ] ;then
		echo "Cookie file created."
		if [ -z "$NO_SU" ] ;then 
			chmod 440 $COOKIE_FILE && \
				chown $SYNCSERVER_USER:$SYNCSERVER_USER $COOKIE_FILE
		fi
		return 0
	else
		echo "Creating cookie: FAIL"
		return 1
	fi
}

case $ARG1 in
	status)
		status || true
	;;
	start) 
		start_server
	;;
	stop)
	    stop_server
	;;
	restart|force-reload)
		restart
	;;
	create-db)
	    create_db
	;;
	create-cookie-force)
	    create_cookie
	;;
	create-cookie)
		if [ -f $COOKIE_FILE ] ;then 
			echo -n "Cookie file already exists, "
			echo "try create-cookie-force to replace it"
			exit 1
		else
			create_cookie
		fi
	;;
	*)
		print_help
		exit 1
	;;
esac

